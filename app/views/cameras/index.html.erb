<div id="header">    
  <div class="cont">
    <a href="" id="logo">Los Ojos de La Ciudad</a>
    <div id="search">
      <div id="search_label">
        busca webcams:
      </div>
      <form action="#" onsubmit="showAddress(this.search_address.value); return false">
        <div id="form_item">
          <input type="text" class="text" name="search_address" id="search_address" value="Direcci칩n">
          <input type="text" class="text" id="l" value="Localidad" disabled="true">
          <input type="submit" value="Buscar" class="submit">
        </div>
      </form>
    </div><!-- #search -->
  </div><!-- .cont -->
</div><!-- #header -->

<div id="content_home">
  <div id="home_map"></div>

  <div id="results">      
    <div class="cont">
      <p><%= @cameras.size %> c치maras.</p>
      <!-- <p>
        Tama침o imagen: 
        <a href="#">peque침o</a>
        <a href="#">mediano</a>
        <a href="#">grande</a>
      </p>
       -->
      <ul id="widgets">
        <% if params[:autoactivation] == 'true' %>
          <% @cameras.each do |camera| %>
            <%= render :partial => 'widget', :locals => { :camera => camera, :size => 'medium' } %>
          <% end %>
        <% end %>
      </ul>
      

        
      
    </div><!-- .cont -->
  </div><!-- #results -->
  
</div><!-- #content -->

<script 
  src="http://maps.google.com/maps?file=api&amp;v=2&amp;sensor=false&amp;key=<%= APP_CONFIG[:google_api_key] %>"
  type="text/javascript"></script>


<script type="text/javascript">
  var map = null;
  var markers = new Array();
  var videos = new Array();
  var timelineSteps = new Array();
  
  function initializeDatetimeSteps(){
    <% (0..98).to_a.reverse.each_with_index do |num, index| %>
      timelineSteps[<%= index %>] = '<%= (num*30).minutes.ago.strftime("%Y%m%d%H%M") %>';
    <% end %>
    timelineSteps[99] = 'actual';
  }

  function initialize() {
    if (GBrowserIsCompatible()) {
      map = new GMap2(document.getElementById("home_map"));
      <% if !@cameras.empty? && @cameras.first.is_geolocalized? %>
        var center = 
          new GLatLng(
            <%= @cameras.first.lat %>, 
            <%= @cameras.first.lng %>
          );
      <% else %>
        var center = 
          new GLatLng(
            <%= APP_CONFIG[:default_lat] %>, 
            <%= APP_CONFIG[:default_lng] %>
          );
      <% end %>
    
      map.setCenter(center, 13);
    
      /* The Markers */
      <% @cameras.geolocalized.each do |camera| %>
        markers[<%= camera.id %>] = {
          'camera_name': '<%= camera.name %>',
          'gMarker': new GMarker( new GLatLng( <%= camera.lat %>, <%= camera.lng %> ) ),
          'activated': <%= params[:autoactivation] == 'true' ? 'true' : 'false' %>
        };
        
        // GEvent.addListener(markers[<%= camera.id %>].gMarker, "mouseover", function() {
        //   var myHtml = "<b><%= camera.name %></b>";
        //   map.openInfoWindowHtml(markers[<%= camera.id %>].gMarker.getLatLng(), myHtml);
        // });
        
        GEvent.addListener(markers[<%= camera.id %>].gMarker, "click", function() {
          // adding widget or scrolling to widget
          if( markers[<%= camera.id %>].activated ){
            
            $.scrollTo( 
              '#widget_<%= camera.id %>', 
              800,
              { onAfter: function(){alert("hightlight!");} }
            );
            
          } else {
            addWidget( <%= camera.id %>, '<%= widget_camera_path( camera ) %>' );
            markers[<%= camera.id %>].activated = true;
          }
        });
        
        map.addOverlay(markers[<%= camera.id %>].gMarker);
      <% end %>
      /* The Markers END */
    
      var customUI = map.getDefaultUI();
      // Remove MapType.G_HYBRID_MAP
      customUI.maptypes.hybrid = false;
      map.setUI(customUI);
      
      geocoder = new GClientGeocoder();
    }
  }

  function setMapCenter( camera_id, address ){
    map.panTo( markers[camera_id].gMarker.getLatLng() );
    $('#search_address').attr( 'value', address );
  }
  
  function showAddress(address) {
    if (geocoder) {
      geocoder.getLatLng(
        address,
        function(point) {
          if (!point) {
            alert(address + " not found");
          } else {
            map.panTo(point, 13);
          }
        }
      );
    }
  }
  
  function addWidget( camera_id, request_path ){
    $.get(request_path, function(data) {
      $('#widgets').prepend( data );
    });
  }
  
  function removeWidget( camera_id ){
    $('#widget_' + camera_id).fadeOut('slow', function() {
      $(this).remove();
    });

    markers[camera_id].activated = false;
  }
  
  function chargeSnapshot( camera_id, datetimeStep, size ){
    $("#slider_" + camera_id).slider( "value" , datetimeStep );
    
    request_path = "/cameras/" + camera_id + "/snapshots/" + timelineSteps[datetimeStep] + "/" + size;
    
    $.getJSON(request_path, function(data) {
      $('#widget_' + camera_id + ' .image img').attr( 'src', data.image_url );
      $('#widget_' + camera_id + ' .info_update').html( data.datetime );
    });
  }
  
  function playCamera( camera_id, size, datetimeStep ){
    if( !datetimeStep ){
      pauseCamera( camera_id );
      datetimeStep = $("#slider_" + camera_id).slider( "value" );
      
      $('#play_cam_' + camera_id).fadeOut('slow', function() {
        $('#pause_cam_' + camera_id).fadeIn('slow');
      });
    }
    
    var timeout = 2000;
    
    if( timelineSteps[datetimeStep] == 'actual'){
      timeout = 300000;
    } else {
      datetimeStep ++;
    }
      
    chargeSnapshot( camera_id, datetimeStep, size );
    
    videos[camera_id] = window.setTimeout(playCamera, timeout, camera_id, size, datetimeStep );
  }
  
  function pauseCamera( camera_id ){
    if( videos[camera_id] ) {
      window.clearTimeout(videos[camera_id]);
      videos[camera_id] = null;
      
      $('#pause_cam_' + camera_id).fadeOut('slow', function() {
        $('#play_cam_' + camera_id).fadeIn('slow');
      });
    }
  }
  

  $(document).ready(function() {
    initialize();

    // sortable
    // this can call an event:
    // http://www.wil-linssen.com/musings/entry/extending-the-jquery-sortable-with-ajax-mysql/
    $("#widgets").sortable({ handle : '.handle' }); 
    
    initializeDatetimeSteps();

  });

  $(window).unload( function () { GUnload(); } );

</script>



